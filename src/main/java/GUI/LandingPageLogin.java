package GUI;

import com.intellij.uiDesigner.core.Spacer;
import controller.Controller;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;

public class LandingPageLogin {
    private static JFrame FrameLogin;
    private Controller controller;
    private JPanel panel1;
    private JPanel topPanel;
    private JLabel mainText;
    private JPanel midPanel;
    private JTextField emailField;
    private JPanel emailForm;
    private JLabel subText;
    private JPanel passwordForm;
    private JPasswordField passwordField;
    private JPanel loginPanel;
    private JButton btnLogin;
    private JPanel bottomPanel;
    private JLabel registerField;

    public static void main(String[] args) {
        FrameLogin = new JFrame("Login");
        FrameLogin.setContentPane(new LandingPageLogin().panel1);
        FrameLogin.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        FrameLogin.pack();
        FrameLogin.setLocationRelativeTo(null);         // Centra la finestra sullo schermo
        FrameLogin.setVisible(true);

    }

    public LandingPageLogin() {
        controller = new Controller();

        // ADD ACTION LISTENERS OR OTHER CODE
    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel1.setMaximumSize(new Dimension(800, 600));
        panel1.setMinimumSize(new Dimension(800, 600));
        panel1.setPreferredSize(new Dimension(800, 600));
        topPanel = new JPanel();
        topPanel.setLayout(new BorderLayout(0, 0));
        topPanel.setMaximumSize(new Dimension(800, 180));
        topPanel.setMinimumSize(new Dimension(800, 180));
        topPanel.setOpaque(true);
        topPanel.setPreferredSize(new Dimension(800, 180));
        panel1.add(topPanel);
        mainText = new JLabel();
        mainText.setAlignmentY(0.5f);
        mainText.setEnabled(true);
        Font mainTextFont = this.$$$getFont$$$("Droid Sans Mono", Font.BOLD, 48, mainText.getFont());
        if (mainTextFont != null) mainText.setFont(mainTextFont);
        mainText.setHorizontalAlignment(0);
        mainText.setHorizontalTextPosition(0);
        mainText.setOpaque(false);
        mainText.setText("Bentornato!");
        mainText.setVerticalAlignment(3);
        mainText.setVerticalTextPosition(3);
        topPanel.add(mainText, BorderLayout.CENTER);
        subText = new JLabel();
        Font subTextFont = this.$$$getFont$$$("Droid Sans", Font.ITALIC, 22, subText.getFont());
        if (subTextFont != null) subText.setFont(subTextFont);
        subText.setHorizontalAlignment(0);
        subText.setHorizontalTextPosition(0);
        subText.setText("Inserisci email e password per iniziare...");
        topPanel.add(subText, BorderLayout.SOUTH);
        final Spacer spacer1 = new Spacer();
        topPanel.add(spacer1, BorderLayout.NORTH);
        midPanel = new JPanel();
        midPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        midPanel.setMaximumSize(new Dimension(800, 180));
        midPanel.setMinimumSize(new Dimension(800, 180));
        midPanel.setPreferredSize(new Dimension(800, 180));
        panel1.add(midPanel);
        emailForm = new JPanel();
        emailForm.setLayout(new BorderLayout(0, 0));
        emailForm.setMaximumSize(new Dimension(400, 75));
        emailForm.setMinimumSize(new Dimension(400, 75));
        emailForm.setPreferredSize(new Dimension(400, 75));
        midPanel.add(emailForm);
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$("Droid Sans Mono", Font.PLAIN, 16, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setHorizontalAlignment(2);
        label1.setHorizontalTextPosition(0);
        label1.setText("Email");
        label1.setVerticalAlignment(3);
        emailForm.add(label1, BorderLayout.CENTER);
        emailField = new JTextField();
        Font emailFieldFont = this.$$$getFont$$$("Droid Sans Mono", Font.PLAIN, 14, emailField.getFont());
        if (emailFieldFont != null) emailField.setFont(emailFieldFont);
        emailField.setForeground(new Color(-13487566));
        emailField.setHorizontalAlignment(2);
        emailField.setMaximumSize(new Dimension(50, 40));
        emailField.setMinimumSize(new Dimension(50, 40));
        emailField.setPreferredSize(new Dimension(50, 40));
        emailField.setText("");
        emailField.setVisible(true);
        emailForm.add(emailField, BorderLayout.SOUTH);
        passwordForm = new JPanel();
        passwordForm.setLayout(new BorderLayout(0, 0));
        passwordForm.setMaximumSize(new Dimension(400, 75));
        passwordForm.setMinimumSize(new Dimension(400, 75));
        passwordForm.setPreferredSize(new Dimension(400, 75));
        midPanel.add(passwordForm);
        final JLabel label2 = new JLabel();
        Font label2Font = this.$$$getFont$$$("Droid Sans Mono", Font.PLAIN, 16, label2.getFont());
        if (label2Font != null) label2.setFont(label2Font);
        label2.setHorizontalAlignment(2);
        label2.setHorizontalTextPosition(0);
        label2.setText("Password");
        label2.setVerticalAlignment(3);
        passwordForm.add(label2, BorderLayout.CENTER);
        passwordField = new JPasswordField();
        passwordField.setMaximumSize(new Dimension(50, 40));
        passwordField.setMinimumSize(new Dimension(50, 40));
        passwordField.setOpaque(false);
        passwordField.setPreferredSize(new Dimension(50, 40));
        passwordForm.add(passwordField, BorderLayout.SOUTH);
        loginPanel = new JPanel();
        loginPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        loginPanel.setMaximumSize(new Dimension(800, 55));
        loginPanel.setMinimumSize(new Dimension(800, 55));
        loginPanel.setPreferredSize(new Dimension(800, 55));
        panel1.add(loginPanel);
        btnLogin = new JButton();
        Font btnLoginFont = this.$$$getFont$$$("Droid Sans Mono", Font.BOLD, 14, btnLogin.getFont());
        if (btnLoginFont != null) btnLogin.setFont(btnLoginFont);
        btnLogin.setHorizontalTextPosition(0);
        btnLogin.setInheritsPopupMenu(false);
        btnLogin.setMaximumSize(new Dimension(300, 45));
        btnLogin.setMinimumSize(new Dimension(300, 45));
        btnLogin.setPreferredSize(new Dimension(300, 45));
        btnLogin.setText("Login");
        loginPanel.add(btnLogin);
        bottomPanel = new JPanel();
        bottomPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel1.add(bottomPanel);
        registerField = new JLabel();
        Font registerFieldFont = this.$$$getFont$$$("Droid Sans Mono", Font.ITALIC, 14, registerField.getFont());
        if (registerFieldFont != null) registerField.setFont(registerFieldFont);
        registerField.setText("Non hai un account? Registrati qui...");
        bottomPanel.add(registerField);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

}
